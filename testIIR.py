import scipy.signal
import soundfile as sf
import numpy as np
import matplotlib.pyplot as plt

# Коэффициенты фильтрации
numerator = [ 0.000045696286695778910746414125387815375,
 0,                                  
-0.000228481433478894540179543470870271449,  
 0,                                          
 0.000456962866957789080359086941740542898,  
 0,                                          
-0.000456962866957789080359086941740542898,  
 0,                                          
 0.000228481433478894540179543470870271449,  
 0,                                          
-0.000045696286695778910746414125387815375 ]

denominator = [   1,                                 
  -7.696639492332296050847162405261769890785,
  28.223760563181524929632359999231994152069,
 -64.486683806034164945231168530881404876709,
 101.335519967812643926663440652191638946533,
-114.23737718860685674826527247205376625061,
  93.516138987459640929955639876425266265869,
 -54.91980611882313212390727130696177482605,
  22.184232711340882815420627593994140625,
  -5.584794659348691681088894256390631198883,
   0.67031212949434659797987023921450600028 ]

# Чтение аудиофайла
audio_data, sample_rate = sf.read("sake_binks.wav")
print(sample_rate)
# Применение фильтра
filtered_audio = scipy.signal.lfilter(numerator, denominator, audio_data)

# Сохранение результата в аудиофайл
sf.write("output_audio.wav", filtered_audio, sample_rate)
fft_signal = np.fft.fft(audio_data)
plt.subplot(2, 1, 1)
plt.plot(np.abs(fft_signal))
plt.title('Входной сигнал')

fft_signal = np.fft.fft(filtered_audio)
plt.subplot(2, 1, 2)
plt.plot(np.abs(fft_signal))
plt.title('Спектр сигнала библиотечная функция')
plt.show()
